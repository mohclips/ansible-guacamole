#!/usr/bin/env ansible-playbook
# vim: noai:ts=2:sw=2:et
---

#
# Install Guacamole
#
# v1.0 - 07 Jan 2017 - Nicholas Cross / Mohclips - initial release
# v1.1 - 27 Jan 2017 - Nicholas Cross / Mohclips - added playbook dir for templates, include vars always
# v1.2 - 28 Jan 2017 - Nicholas Cross / Mohclips - template delegate_to for localhost
#

# TODO : use tags

- name: "Install Guacamole on the jumpservers"

  hosts: all
#  connection: ssh
  gather_facts: yes

  become: yes
  become_user: root

  vars:

    # 
    provision_dns: true
    provision_apt: true
    provision_src: true
    provision_tomcat: true
    provision_mysql_security: true
    provision_mysql: true
    provision_guacamole: true
    config_ssl_tomcat: true

  tasks:

    # pull in our vars
    - include_vars:
        dir: "vars"
        depth: 1

   
    - name: "Get playbook absolute path"
      debug: msg="We are running in {{ playbook_dir }}"
       

    # Apt
    - block:

      - name: "Update server - make sure it is currently patched to date"
        apt:
          upgrade: dist
          update_cache: yes
        register: update

      - debug: var=update

      - name: "Install Guacamole library requirements"
        apt:
          name: "{{ item }}"
          state: present
          install_recommends: no      
        with_items:
          "{{ guacamole.dependancies }}"
      
      when: provision_apt 

    - name: "Create folders"
      file:
        path: "{{ item }}"         
        state: directory
        mode: 0755
      with_items:
        "{{ guacamole.paths }}"

    # Guacamole Source
    - block:
      - name: "Download Server source and unpack"
        unarchive: 
          src: "{{ guacamole.source_code }}"
          dest: "{{ guacamole.source_code_path }}"
          remote_src: true

      - name: "configure"
        command: ./configure --with-init-dir=/etc/init.d
        args:
          chdir: "{{ guacamole.source_code_path }}/guacamole-server-0.9.10-incubating" 
        register: output
      - debug: var=output.stdout_lines

      - name: "make"
        command: make
        args:
          chdir: "{{ guacamole.source_code_path }}/guacamole-server-0.9.10-incubating" 
        register: output
      - debug: var=output.stdout_lines

      - name: "make install"
        command: make install
        args:
          chdir: "{{ guacamole.source_code_path }}/guacamole-server-0.9.10-incubating" 
        register: output
      - debug: var=output.stdout_lines

      - name: "ldconfig"
        command: ldconfig
        args:
          chdir: "{{ guacamole.source_code_path }}/guacamole-server-0.9.10-incubating" 
        register: output
      - debug: var=output.stdout_lines

      when: provision_src


    # Tomcat
    - block:

      - name: "Download Guacamole Client"
        get_url: 
          url: "{{ guacamole.client }}"
          dest: "{{ guacamole.source_code_path }}"

      - name: "stat client war file"
        stat: path="{{ guacamole.source_code_path }}/guacamole-0.9.10-incubating.war"
        register: foo_stat
       
      - name: "Move war file to Tomcat webapps"
        command: mv "{{ guacamole.source_code_path }}/guacamole-0.9.10-incubating.war" /var/lib/tomcat7/webapps/guacamole.war
        when: foo_stat.stat.exists
        notify:
          - restart_tomcat
          - restart_guacd

     
      - name: "Download auth_jdbc and unpack"
        unarchive: 
          src: "{{ guacamole.auth_jdbc }}"
          dest: "{{ guacamole.source_code_path }}"
          remote_src: true

      - name: "stat jdbc jar file"
        stat: path="{{ guacamole.source_code_path }}/guacamole-auth-jdbc-0.9.10-incubating/mysql/guacamole-auth-jdbc-mysql-0.9.10-incubating.jar"
        register: foo_stat
       
      - name: "Move jar file to /etc/guacamole/extensions/"
        command: mv "{{ guacamole.source_code_path }}/guacamole-auth-jdbc-0.9.10-incubating/mysql/guacamole-auth-jdbc-mysql-0.9.10-incubating.jar" /etc/guacamole/extensions/
        when: foo_stat.stat.exists
        notify:
          - restart_mysql

      - name: "Download mysql_conn java and unpack"
        unarchive: 
          src: "{{ guacamole.mysql_conn }}"
          dest: "{{ guacamole.source_code_path }}"
          remote_src: true

      - name: "stat mysql jar file"
        stat: path="{{ guacamole.source_code_path }}/mysql-connector-java-5.1.40/mysql-connector-java-5.1.40-bin.jar"
        register: foo_stat
       
      - name: "Move jar file to /etc/guacamole/lib/"
        command: mv "{{ guacamole.source_code_path }}/mysql-connector-java-5.1.40/mysql-connector-java-5.1.40-bin.jar" /etc/guacamole/lib/
        when: foo_stat.stat.exists
        notify:
          - restart_mysql

      when: provision_tomcat

    # MySQL
    - block:

      # some security 
      - name: "drop demo db"
        mysql_db:
          name: demo
          state: absent

      - name: "ensure anonymous users are not in the database"
        mysql_user: name='' host="{{ item }}" state=absent
        with_items:
          - "localhost"
          - "{{ inventory_hostname }}"

      - name: "update mysql root password for all root accounts"
        mysql_user: name=root host="{{ item }}" password="{{ guacamole.db.root_password }}"
        with_items:
          - "{{ ansible_hostname }}"
          - "127.0.0.1"
          - "::1"
          - localhost

      when: provision_mysql_security

    - block: 

      # guacamole db setup

      - name: "drop guacamole db" # idempotent it is not, so drop again DANGEROUS
        mysql_db:
          state: absent
          name: "{{ guacamole.db.name }}"
          login_password: "{{ guacamole.db.root_password }}"

      - name: "create guacamole db"
        mysql_db:
          state: present
          name: "{{ guacamole.db.name }}"
          login_password: "{{ guacamole.db.root_password }}"

      - name: "create guacamole db user"
        mysql_user:
          name: "{{ guacamole.db.user }}"
          password: "{{ guacamole.db.user_pass }}"
          state: present
          priv: '{{ guacamole.db.name }}.*:SELECT,INSERT,UPDATE,DELETE'
          login_password: "{{ guacamole.db.root_password }}"


      - name: "import mysql setup"
        mysql_db:
          state: import
          name: "{{ guacamole.db.name }}"
          target: "{{ item }}"
          login_password: "{{ guacamole.db.root_password }}"
        with_items:
          - "{{ guacamole.source_code_path }}/guacamole-auth-jdbc-0.9.10-incubating/mysql/schema/001-create-schema.sql"
          - "{{ guacamole.source_code_path }}/guacamole-auth-jdbc-0.9.10-incubating/mysql/schema/002-create-admin-user.sql"
     

      - name: "create update admin password sql"
        template:
          src: "{{ playbook_dir }}/templates/guacamole_admin_change.sql.j2"
          dest: "{{ guacamole.source_code_path }}/guacamole_admin_change.sql"
          owner: root
          group: root
          mode: 0600
        delegate_to: "{{ '127.0.0.1' if inventory_hostname == 'localhost' else omit }}"

      - name: "update admin user and pass"
        mysql_db:
          state: import
          name: "{{ guacamole.db.name }}"
          target: "{{ guacamole.source_code_path }}/guacamole_admin_change.sql"
          login_password: "{{ guacamole.db.root_password }}"
 
      - name: "delete update admin sql"
        file: 
          state: absent
          path: "{{ guacamole.source_code_path }}/guacamole_admin_change.sql" 

      when: provision_mysql


    # Guacamole
    - block:

      # required libs 
      - name: "Symlink required libs"
        command: ln -s /usr/local/lib/freerdp/* /usr/lib/x86_64-linux-gnu/freerdp/.
        ignore_errors: true
# this doesnt work
#        file:
#          src: /usr/local/lib/freerdp/*
#          dest: /usr/lib/x86_64-linux-gnu/freerdp/.
#          state: link

      # without this, tomcat does not authenticate
      - name: "Update Tomcat HOME for Guacamole" 
        lineinfile:
          dest: /etc/default/tomcat7
          regexp: '^GUACAMOLE_HOME='
          line: 'GUACAMOLE_HOME=/etc/guacamole'

      # i dont like these they should be idempotent
      - name: "Remove Tomcat Guacamole folder"
        command: rm -rf /usr/share/tomcat7/.guacamole
        ignore_errors: true
 
      - name: "Create link to Tomcat Guacamole properties inside .guacamole"
        command:  ln -s /etc/guacamole/guacamole.properties /usr/share/tomcat7/.guacamole
        ignore_errors: true
# this does not work
#        file: 
#          src: /etc/guacamole/guacamole.properties 
#          dest: /usr/share/tomcat7/.guacamole
#          state: link

      - name: "Guacamole Properties upload"
        template:
          src: "{{ playbook_dir }}/templates/guacamole.properties.j2"
          dest: /etc/guacamole/guacamole.properties
          owner: root
          group: root
          mode: 0644
        delegate_to: "{{ '127.0.0.1' if inventory_hostname == 'localhost' else omit }}"
        notify:
          - restart_guacd
          - restart_tomcat

      when: provision_guacamole

      ### It works with BASIC HTTP up to here.


      # config ssl tomcat
    - block:
      
        - name: "Create keystore folder"
          file:
            path: "{{ tomcat.keystore_path }}"         
            state: directory

        - name: "stat keystore file"
          stat: path="{{ tomcat.keystore_path }}/{{ tomcat.keystore }}"
          register: foo_stat
 
        - name: "Create keystore file"   
          command: keytool -genkey -keystore "{{ tomcat.keystore_path }}/{{ tomcat.keystore }}" -alias "{{ tomcat.key.alias }}" -dname "{{ tomcat.key.dname }}" -storepass "{{ tomcat.key.pass }}" -keypass "{{ tomcat.key.pass }}" -keyalg "{{ tomcat.key.alg }}" -keysize "{{ tomcat.key.size }}" -validity "{{ tomcat.key.expires }}"
          when: not foo_stat.stat.exists

        - name: "server.xml upload"
          template:
            src: "{{ playbook_dir }}/templates/server.xml.j2"
            dest: /etc/tomcat7/server.xml
            owner: root
            group: root
            mode: 0644
          delegate_to: "{{ '127.0.0.1' if inventory_hostname == 'localhost' else omit }}"

        - name: "HTTP only cookies in context.xml"  
          lineinfile:
            dest: /etc/tomcat7/context.xml
            regexp: "^<Context"
            line: "<Context useHttpOnly='true'>"

        - name: "Force HTTPS in web.xml"
          blockinfile:
            dest: /etc/tomcat7/web.xml
            marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
            insertbefore: "</web-app>"
            content: |
              <!-- force HTTPS -->
              <security-constraint> 
                <web-resource-collection> 
                  <web-resource-name>Protected Context</web-resource-name> 
                  <url-pattern>/*</url-pattern>
                </web-resource-collection> 
                <user-data-constraint> 
                  <transport-guarantee>CONFIDENTIAL</transport-guarantee> 
                </user-data-constraint> 
              </security-constraint>

        - name: "remove default web dir contents ROOT"
          file: 
            path: "/var/lib/tomcat7/webapps/ROOT/"
            state: absent

        - name: "recreate default web dir contents ROOT"
          file: 
            path: "/var/lib/tomcat7/webapps/ROOT/"
            state: directory
            mode: 0755

  

        - name: "Create redirect code to guacamole in default ROOT index.jsp"
          lineinfile:
            dest: /var/lib/tomcat7/webapps/ROOT/index.jsp
            state: present
            create: yes
            regexp: "^<meta"
            line: '<meta http-equiv="refresh" content="0;url=/guacamole/"/>'

        - name: "Notify TomCat to restart and wait for it to complete"
          debug: msg="Go restart it dude..."
          changed_when: true
          notify:
            - restart_tomcat
            - wait_for_tomcat


      when: config_ssl_tomcat


  handlers:
    - name: "restart_tomcat"
      service:
        name: tomcat7
        state: restarted
        enabled: true

    - name: "wait_for_tomcat"
      uri:
        url: "https://{{ ansible_ssh_host }}:8443/"
        validate_certs: no
      register: result
      until: result['status']|default(0) == 200
      retries: 15
      delay: 3

  
    - name: "restart_guacd"
      service:
        name: guacd
        state: restarted
        enabled: true

    - name: "restart_mysql"
      service:
        name: guacd
        state: restarted
        enabled: true

